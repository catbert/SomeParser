using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

namespace SomeParser.Tokenizer
{
    /// <summary>
    /// Finishes the parsing
    /// </summary>
    class RuleNumber : Rule[TokenizerState]
    {
        
        // priority 5
        public this()
        {
            base(5);
        }
        
        // is applicable if char is sign
        public override IsApplicable(engine : RuleEngine[TokenizerState]) : bool
        {
            Char.IsNumber(engine.Data.RemainingText[0])
        }
        
        // stops engine
        public override Apply(engine : RuleEngine[TokenizerState]) : void
        {
            def (tokenSubString, tail) = engine.Data.RemainingText.SplitByChar( Char.IsNumber );
            
            engine.Data.Tokens.Add(Token.Number(tokenSubString.Location));
            engine.Data.RemainingText = tail;
        }
        
    }
}
